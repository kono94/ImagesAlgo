Thoughgs:
IMPORTANT:
		m = Matrix.multiply(m, myImg.getMatrix());
		myImg.setMatrix(m);
		
		=> dreht um den neuen mittelpunkt des neuen bildes, so wie man will,
			aber bewegt sich, als wenn das bild wüsste wohin es zeigt
			
		m = Matrix.multiply(myImg.getMatrix(), m);
		myImg.setMatrix(m);
		
		=> dreht immer um den mittelpunkt des bildes, aber bewegt sich so wie
		es soll

1) Inner classes or seperated classes?
	- possible inner classes [view]: 
		- MyMenuBar, ImageBarPanel, (MyFileChooser), 
		- whats up with "MyImage" ?

2) MVC-Pattern
	-	apply all Listeners in controller
	-	view knows controller
	
	
3) Observer-Pattern
	-	between Model and View
	
4) JFileChooser
	-	pass model and call "model.addImageToVector" OR pass the vector itself (JFileChooser changes model-data :/ )
	-	same for view
	
	
5) Vector- and Matrix-class
	-	inner class of model or seperate classes
	-	currently: inner classes of model 
		-> Model.Matrix OR static import!
	-	vector and matrix only suitable for 3x3 or custom size
	-	Matrix:
		-	Matrix a = new Matrix()... a.multiply(Matrix b) OR Matrix.multiply(Matrix A, Matrix B)

6) Shearing
	-	inverse matrix to shearing?
	
7) MyImage 
	-	should not be a JComponent, right?
	
8) Why does loadAllImagesFromDirectory()  freezes the UI-Thread?

9) Histogramm Hashtabelle